#!/usr/bin/env bash
#
###############################################################################
# Environment
###############################################################################

# $_ME
#
# This program's basename.
_ME="$(basename "${0}")"

###############################################################################
# Help
###############################################################################

# _print_help()
#
# Usage:
#   _print_help
#
# Print the program help information.
_print_help() {
  cat <<HEREDOC
Program to output a machine's users and groups they belong to.

Usage:
  ${_ME} [OPTION]

Options:
  -h --help  Show this screen.
  -s  Only display information for standard users
  -m  Only display information for system users
  no option prints information for all users
HEREDOC
}

_usage() {
  echo "Usage: ${_ME} [OPTION]"
}

###############################################################################
# Main
###############################################################################

_main() {
  if [[ -z "${1:-}" ]]
  then
    awk -F ":" '$3 >= 0 {system("groups " $1)}' /etc/passwd
  else
    if [[ "${1:-}" =~ ^-h|--help$  ]]
    then
      _print_help
    elif [[ "${1:-}" =~ ^-s$ ]]
    then
      awk -F ":" '$3 >= 1000 {system("groups " $1)}' /etc/passwd
    elif [[ "${1:-}" =~ ^-m$ ]]
    then
      awk -F ":" '$3 < 1000 {system("groups " $1)}' /etc/passwd
    else
      echo "Invalid option!"
      exit 1
    fi
  fi
}

# Call `_main` after everything has been defined.
_main "$@"
